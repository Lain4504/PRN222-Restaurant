@page
@model PRN222_Restaurant.Pages.OrderListModel
@{
    ViewData["Title"] = "Đơn hàng của tôi";
}

<div class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
        <h1 class="text-3xl font-bold text-center mb-8">Đơn hàng của tôi</h1>

        @if (!string.IsNullOrEmpty(Model.StatusMessage))
        {
            <div class="alert @(Model.StatusMessage.StartsWith("Error") ? "alert-error" : "alert-success") shadow-lg mb-4">
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <span>@Model.StatusMessage</span>
                </div>
            </div>
        }

        <div class="card bg-base-100 shadow-xl">
            <div class="card-body">
                <div class="overflow-x-auto">
                    <table class="table w-full">
                        <thead>
                            <tr>
                                <th>Mã đơn</th>
                                <th>Loại đơn</th>
                                <th>Bàn</th>
                                <th>Ngày đặt</th>
                                <th>Thời gian đặt bàn</th>
                                <th>Tổng tiền</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>#@order.Id</td>
                                    <td>
                                        <span class="badge @(order.OrderType == "Immediate" ? "badge-info" : "badge-warning")">
                                            @(order.OrderType == "Immediate" ? "Tại chỗ" : "Đặt trước")
                                        </span>
                                    </td>
                                    <td>@(order.Table != null ? $"Bàn {order.Table.TableNumber}" : "N/A")</td>
                                    <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@(order.ReservationTime.HasValue ? order.ReservationTime.Value.ToString("dd/MM/yyyy HH:mm") : "N/A")</td>
                                    <td>@order.TotalPrice.ToString("N0") đ</td>
                                    <td>
                                        <span class="badge 
                                               @(order.Status == "Pending" ? "badge-warning" : 
                                                  order.Status == "Preparing" ? "badge-info" : 
                                                  order.Status == "Served" ? "badge-success" : 
                                                  order.Status == "Completed" ? "badge-success" : 
                                                  order.Status == "Cancelled" ? "badge-error" : "")">
                                            @(order.Status == "Pending" ? "Chờ xử lý" :
                                              order.Status == "Preparing" ? "Đang chuẩn bị" :
                                              order.Status == "Served" ? "Đã phục vụ" :
                                              order.Status == "Completed" ? "Hoàn thành" :
                                              order.Status == "Cancelled" ? "Đã hủy" : order.Status)
                                        </span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-info view-order-details" data-id="@order.Id">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                            </svg>
                                            Chi tiết
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <div class="flex justify-between items-center mt-4">
                    <div class="text-sm text-gray-600">
                        Hiển thị @((Model.OrdersResult.Page - 1) * Model.OrdersResult.PageSize + 1) đến 
                        @(Math.Min(Model.OrdersResult.Page * Model.OrdersResult.PageSize, Model.OrdersResult.TotalCount)) 
                        trên tổng số @Model.OrdersResult.TotalCount đơn hàng
                    </div>
                    
                    <div class="join">
                        @if (Model.OrdersResult.HasPreviousPage)
                        {
                            <a href="/orderlist?currentPage=@(Model.OrdersResult.Page - 1)&pageSize=@Model.OrdersResult.PageSize" 
                               class="join-item btn btn-outline">«</a>
                        }
                        else
                        {
                            <button class="join-item btn btn-outline" disabled>«</button>
                        }
                        
                        @for (int i = Math.Max(1, Model.OrdersResult.Page - 2); i <= Math.Min(Model.OrdersResult.TotalPages, Math.Max(Model.OrdersResult.Page + 2, 5)); i++)
                        {
                            if (i == Model.OrdersResult.Page)
                            {
                                <button class="join-item btn btn-active">@i</button>
                            }
                            else
                            {
                                <a href="/orderlist?currentPage=@i&pageSize=@Model.OrdersResult.PageSize" 
                                   class="join-item btn btn-outline">@i</a>
                            }
                        }
                        
                        @if (Model.OrdersResult.HasNextPage)
                        {
                            <a href="/orderlist?currentPage=@(Model.OrdersResult.Page + 1)&pageSize=@Model.OrdersResult.PageSize" 
                               class="join-item btn btn-outline">»</a>
                        }
                        else
                        {
                            <button class="join-item btn btn-outline" disabled>»</button>
                        }
                    </div>
                    
                    <div class="flex items-center">
                        <span class="mr-2">Hiển thị:</span>
                        <select id="pageSize" class="select select-bordered select-sm w-auto max-w-xs">
                            @{
                                bool isSelected5 = Model.OrdersResult.PageSize == 5;
                                bool isSelected10 = Model.OrdersResult.PageSize == 10;
                                bool isSelected20 = Model.OrdersResult.PageSize == 20;
                                bool isSelected50 = Model.OrdersResult.PageSize == 50;
                            }
                            <option value="5" selected="@isSelected5">5</option>
                            <option value="10" selected="@isSelected10">10</option>
                            <option value="20" selected="@isSelected20">20</option>
                            <option value="50" selected="@isSelected50">50</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal xem chi tiết đơn hàng -->
<dialog id="order-details-modal" class="modal">
    <div class="modal-box w-11/12 max-w-5xl">
        <h3 class="font-bold text-lg mb-4">Chi tiết đơn hàng #<span id="order-id"></span></h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            <div>
                <h4 class="font-medium text-sm text-gray-500">Loại đơn hàng</h4>
                <p id="order-type" class="text-lg"></p>
            </div>
            <div>
                <h4 class="font-medium text-sm text-gray-500">Trạng thái</h4>
                <p id="order-status" class="text-lg"></p>
            </div>
            <div>
                <h4 class="font-medium text-sm text-gray-500">Bàn</h4>
                <p id="order-table" class="text-lg"></p>
            </div>
            <div>
                <h4 class="font-medium text-sm text-gray-500">Ngày đặt</h4>
                <p id="order-date" class="text-lg"></p>
            </div>
            <div>
                <h4 class="font-medium text-sm text-gray-500">Thời gian đặt bàn</h4>
                <p id="order-reservation-time" class="text-lg"></p>
            </div>
            <div>
                <h4 class="font-medium text-sm text-gray-500">Số lượng khách</h4>
                <p id="order-guests" class="text-lg"></p>
            </div>
            <div>
                <h4 class="font-medium text-sm text-gray-500">Ghi chú</h4>
                <p id="order-note" class="text-lg"></p>
            </div>
        </div>
        
        <h4 class="font-medium text-lg mb-2">Danh sách món</h4>
        <div class="overflow-x-auto mb-6">
            <table class="table w-full">
                <thead>
                    <tr>
                        <th>Tên món</th>
                        <th>Số lượng</th>
                        <th>Đơn giá</th>
                        <th>Thành tiền</th>
                    </tr>
                </thead>
                <tbody id="order-items">
                    <!-- Items will be loaded here -->
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-right font-bold">Tổng cộng:</td>
                        <td class="font-bold" id="order-total"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        
        <div class="modal-action">
            <form method="dialog">
                <button class="btn">Đóng</button>
            </form>
        </div>
    </div>
</dialog>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Xử lý xem chi tiết đơn hàng
            document.querySelectorAll('.view-order-details').forEach(function(button) {
                button.addEventListener('click', function() {
                    const orderId = this.getAttribute('data-id');
                    const modal = document.getElementById('order-details-modal');
                    
                    // Fetch order details
                    fetch(`/orderlist?handler=OrderDetails&id=${orderId}`)
                        .then(response => response.json())
                        .then(data => {
                            document.getElementById('order-id').textContent = data.id;
                            document.getElementById('order-type').textContent = data.orderType === 'Immediate' ? 'Tại chỗ' : 'Đặt trước';
                            document.getElementById('order-status').textContent = 
                                data.status === 'Pending' ? 'Chờ xử lý' :
                                data.status === 'Preparing' ? 'Đang chuẩn bị' :
                                data.status === 'Served' ? 'Đã phục vụ' :
                                data.status === 'Completed' ? 'Hoàn thành' :
                                data.status === 'Cancelled' ? 'Đã hủy' : data.status;
                            document.getElementById('order-table').textContent = data.table ? `Bàn ${data.table}` : 'N/A';
                            document.getElementById('order-date').textContent = new Date(data.orderDate).toLocaleString('vi-VN');
                            document.getElementById('order-reservation-time').textContent = data.reservationTime ? new Date(data.reservationTime).toLocaleString('vi-VN') : 'N/A';
                            document.getElementById('order-guests').textContent = data.numberOfGuests || 'N/A';
                            document.getElementById('order-note').textContent = data.note || 'N/A';
                            
                            // Update order items
                            const itemsContainer = document.getElementById('order-items');
                            itemsContainer.innerHTML = '';
                            data.items.forEach(item => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                    <td>${item.name}</td>
                                    <td>${item.quantity}</td>
                                    <td>${item.unitPrice.toLocaleString('vi-VN')} đ</td>
                                    <td>${item.total.toLocaleString('vi-VN')} đ</td>
                                `;
                                itemsContainer.appendChild(row);
                            });
                            
                            document.getElementById('order-total').textContent = `${data.totalPrice.toLocaleString('vi-VN')} đ`;
                            
                            modal.showModal();
                        });
                });
            });
            
            // Xử lý thay đổi số mục trên mỗi trang
            document.getElementById('pageSize').addEventListener('change', function() {
                window.location.href = '/orderlist?currentPage=1&pageSize=' + this.value;
            });
        });
    </script>
} 