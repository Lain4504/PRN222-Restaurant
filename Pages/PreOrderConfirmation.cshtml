@page "/preorderconfirmation/{id:int}"
@model PRN222_Restaurant.Pages.PreOrderConfirmationModel
@{
    ViewData["Title"] = "Reservation Confirmation";
}

<section class="py-16 bg-white">
    <div class="container mx-auto px-4">
        <div class="max-w-3xl mx-auto">
            <div class="card bg-base-100 shadow-xl">
                <div class="card-body p-8">
                    <!-- Success/Error Messages -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success mb-6">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <span>@TempData["SuccessMessage"]</span>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-error mb-6">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z" />
                            </svg>
                            <span>@TempData["ErrorMessage"]</span>
                        </div>
                    }

                    <!-- Success Message -->
                    <div class="flex flex-col items-center justify-center py-4 mb-8">
                        <div class="text-center mb-4">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-success mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </div>
                        <h1 class="text-3xl font-bold mb-2 text-center">Pre-Order Successfully Placed!</h1>
                        <p class="text-center text-gray-600 mb-6">
                            Thank you for choosing Ocean Delights. Your reservation and pre-order have been successfully booked.
                        </p>
                    </div>
                    
                    <!-- Payment Timer Alert -->
                    <div class="alert alert-warning mb-8">
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <div>
                                <h3 class="font-bold">Please complete your payment within:</h3>
                                <div class="text-lg font-mono font-bold" id="countdown">15:00</div>
                                <p class="text-sm">Your reservation will be automatically cancelled if payment is not completed within 15 minutes.</p>
                            </div>
                        </div>
                    </div>

                    <!-- Reservation Details -->
                    <div class="bg-base-200 p-6 rounded-lg mb-8">
                        <h2 class="text-xl font-semibold mb-4">Reservation Details</h2>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <p><span class="font-medium">Date:</span> @Model.ReservationDate.ToString("MMMM dd, yyyy")</p>
                                <p><span class="font-medium">Time:</span> @Model.ReservationTime.ToString("hh\\:mm")</p>
                            </div>
                            <div>
                                <p><span class="font-medium">Table:</span> @Model.TableNumber</p>
                                <p><span class="font-medium">Guests:</span> @Model.NumberOfGuests</p>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Note))
                        {
                            <div class="mt-4">
                                <p><span class="font-medium">Special Requests:</span></p>
                                <p class="italic">@Model.Note</p>
                            </div>
                        }
                    </div>

                    <!-- Pre-Order Items -->
                    @if (Model.OrderItems.Any())
                    {
                        <div class="mb-8">
                            <h2 class="text-xl font-semibold mb-4">Pre-Ordered Items</h2>
                            <div class="overflow-x-auto">
                                <table class="table w-full">
                                    <thead>
                                        <tr>
                                            <th>Item</th>
                                            <th class="text-right">Quantity</th>
                                            <th class="text-right">Price</th>
                                            <th class="text-right">Subtotal</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.OrderItems)
                                        {
                                            <tr>
                                                <td>@item.Name</td>
                                                <td class="text-right">@item.Quantity</td>
                                                <td class="text-right">$@item.Price.ToString("F2")</td>
                                                <td class="text-right">$@item.Subtotal.ToString("F2")</td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="3" class="text-right font-bold">Total:</td>
                                            <td class="text-right font-bold">$@Model.TotalAmount.ToString("F2")</td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    }

                    <!-- Points Redemption Section -->
                    @if (User.Identity.IsAuthenticated && Model.UserPoints > 0)
                    {
                        <div class="bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl p-6 mb-8">
                            <div class="text-center mb-4">
                                <h3 class="text-lg font-semibold text-gray-800 mb-2">Your Points</h3>
                                <div class="text-3xl font-bold text-purple-600">@Model.UserPoints</div>
                                <p class="text-sm text-gray-600">Worth @((Model.UserPoints * 1.0m).ToString("C"))</p>
                            </div>

                            @if (Model.MaxUsablePoints > 0)
                            {
                                <form method="post" asp-page-handler="SetPoints" asp-route-id="@Model.Order.Id" class="space-y-4">
                                    <div class="mb-4">
                                        <label for="pointsToUse" class="block text-sm font-medium text-gray-700 mb-2">
                                            Points to Use (0 - @Model.MaxUsablePoints)
                                        </label>
                                        <input type="range"
                                               id="pointsToUse"
                                               name="PointsToUse"
                                               min="0"
                                               max="@Model.MaxUsablePoints"
                                               value="@Model.PointsToUse"
                                               class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
                                               oninput="updatePointsDisplay(this.value)">
                                        <div class="flex justify-between text-xs text-gray-500 mt-1">
                                            <span>0</span>
                                            <span id="selectedPoints">@Model.PointsToUse</span>
                                            <span>@Model.MaxUsablePoints</span>
                                        </div>
                                    </div>
                                    <div class="text-center mb-4">
                                        <p class="text-sm text-gray-600">Discount: <span id="pointsDiscount" class="font-semibold text-green-600">@((Model.PointsToUse * 1.0m).ToString("C"))</span></p>
                                        <p class="text-lg font-bold text-blue-600 mt-2">Final Total: <span id="finalAmount">@Model.FinalTotal.ToString("C")</span></p>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-secondary">Select Points for Payment</button>
                                    </div>
                                </form>
                            }
                            else
                            {
                                <div class="text-center text-gray-500">
                                    <p class="text-sm">You need at least 1 point to redeem</p>
                                    <a href="/points-history" class="text-purple-600 hover:text-purple-800 text-sm underline">View Points History</a>
                                </div>
                            }
                        </div>
                    }

                    <!-- Order Total Display -->
                    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 mb-8">
                        <div class="text-center">
                            <p class="text-gray-600 text-sm mb-2">Order Total</p>
                            <p class="text-2xl font-bold text-gray-800">@Model.TotalAmount.ToString("C")</p>
                            @if (Model.PointsDiscount > 0)
                            {
                                <p class="text-sm text-orange-600 mt-1">- @Model.PointsDiscount.ToString("C") (Points - will be applied at payment)</p>
                                <hr class="my-2">
                                <p class="text-gray-600 text-sm">Estimated Final Amount</p>
                                <p class="text-3xl font-bold text-blue-600">@Model.FinalTotal.ToString("C")</p>
                                <p class="text-xs text-gray-500 mt-1">*Points will be deducted during payment</p>
                            }
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="flex flex-col items-center gap-4 mt-8">
                        <a href="/checkout?orderId=@Model.Order.Id" class="btn btn-primary btn-lg w-full md:w-1/2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                            </svg>
                            Pay Now
                        </a>
                        <div class="flex flex-col md:flex-row gap-4 justify-center w-full">
                            <a href="/" class="btn btn-outline flex-1">Return to Homepage</a>
                            <a href="/menu" class="btn btn-outline flex-1">View Our Menu</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Points calculation functionality
        function updatePointsDisplay(points) {
            const pointValue = 1.0; // $1 per point
            const orderTotal = @Model.TotalAmount;

            // Update selected points display
            document.getElementById('selectedPoints').textContent = points;

            // Calculate discount
            const discount = points * pointValue;
            document.getElementById('pointsDiscount').textContent = '$' + discount.toFixed(2);

            // Calculate and update final amount
            const finalAmount = Math.max(0, orderTotal - discount);
            document.getElementById('finalAmount').textContent = '$' + finalAmount.toFixed(2);
        }

        // Countdown timer functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize points display if slider exists
            const pointsSlider = document.getElementById('pointsToUse');
            if (pointsSlider) {
                updatePointsDisplay(pointsSlider.value);
            }

            // Set the countdown time (15 minutes in seconds)
            let timeLeft = 15 * 60;
            const countdownElement = document.getElementById('countdown');
            
            // Update the countdown every second
            const countdownInterval = setInterval(function() {
                // Calculate minutes and seconds
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                
                // Display the time with leading zeros if needed
                countdownElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                // Decrement the time
                timeLeft--;
                
                // Check if time has expired
                if (timeLeft < 0) {
                    clearInterval(countdownInterval);
                    countdownElement.textContent = '00:00';
                    countdownElement.classList.add('text-red-500');
                    
                    // You could redirect to a payment failed page or show a message
                    alert('Your reservation time has expired. The order will be cancelled.');
                    window.location.href = '/';
                }
                
                // Change color to red when less than 3 minutes remaining
                if (timeLeft < 180) {
                    countdownElement.classList.add('text-red-500');
                }
            }, 1000);
        });
    </script>
} 