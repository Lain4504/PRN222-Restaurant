@page "/blazor/disks"
@using PRN222_Restaurant.Models
@using PRN222_Restaurant.Services
@inject IDiskService DiskService

<h3 class="text-2xl font-bold mb-4">Disks (Direct Service)</h3>

<div class="mb-4">
    <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
            @onclick="() => ShowCreateForm()">
        Add New Disk
    </button>
</div>

@if (_disks == null)
{
    <p>Loading...</p>
}
else
{
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        @foreach (var disk in _disks)
        {
            <div class="bg-white shadow-lg rounded-lg p-6">
                <div class="flex justify-between items-start">
                    <div>
                        <h4 class="text-xl font-semibold">@disk.Name</h4>
                        <p class="text-gray-600">@disk.Description</p>
                        <p class="text-lg font-bold text-green-600">$@disk.Price</p>
                        <p class="text-sm text-gray-500">
                            Status: 
                            <span class="@(disk.IsAvailable ? "text-green-500" : "text-red-500")">
                                @(disk.IsAvailable ? "Available" : "Not Available")
                            </span>
                        </p>
                    </div>
                    <div class="space-x-2">
                        <button class="text-blue-500 hover:text-blue-700"
                                @onclick="() => ShowEditForm(disk)">
                            Edit
                        </button>
                        <button class="text-red-500 hover:text-red-700"
                                @onclick="() => DeleteDisk(disk.Id)">
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@if (_showForm)
{
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
        <div class="bg-white p-6 rounded-lg w-full max-w-md">
            <h4 class="text-xl font-bold mb-4">@(_editingDisk == null ? "Create" : "Edit") Disk</h4>
            <EditForm Model="@_formDisk" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
                        Name
                    </label>
                    <InputText id="name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                              @bind-Value="_formDisk.Name" />
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="description">
                        Description
                    </label>
                    <InputTextArea id="description" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                 @bind-Value="_formDisk.Description" />
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="price">
                        Price
                    </label>
                    <InputNumber id="price" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                               @bind-Value="_formDisk.Price" />
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">
                        <InputCheckbox @bind-Value="_formDisk.IsAvailable" />
                        Available
                    </label>
                </div>

                <div class="flex justify-end space-x-2">
                    <button type="button" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded"
                            @onclick="CloseForm">
                        Cancel
                    </button>
                    <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        @(_editingDisk == null ? "Create" : "Save")
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    private List<Disk>? _disks;
    private bool _showForm;
    private Disk? _editingDisk;
    private Disk _formDisk = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDisks();
    }

    private async Task LoadDisks()
    {
        var disks = await DiskService.GetAllDisksAsync();
        _disks = disks.ToList();
    }

    private void ShowCreateForm()
    {
        _editingDisk = null;
        _formDisk = new Disk();
        _showForm = true;
    }

    private void ShowEditForm(Disk disk)
    {
        _editingDisk = disk;
        _formDisk = new Disk
        {
            Id = disk.Id,
            Name = disk.Name,
            Description = disk.Description,
            Price = disk.Price,
            IsAvailable = disk.IsAvailable
        };
        _showForm = true;
    }

    private async Task HandleSubmit()
    {
        if (_editingDisk == null)
        {
            await DiskService.CreateDiskAsync(_formDisk);
        }
        else
        {
            await DiskService.UpdateDiskAsync(_editingDisk.Id, _formDisk);
        }

        await LoadDisks();
        CloseForm();
    }

    private async Task DeleteDisk(int id)
    {
        if (await DiskService.DeleteDiskAsync(id))
        {
            await LoadDisks();
        }
    }

    private void CloseForm()
    {
        _showForm = false;
        _editingDisk = null;
        _formDisk = new Disk();
    }
} 